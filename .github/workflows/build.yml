name: Build

on:
  push:
    branches: ["*"]
  pull_request:
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:

  # Windows build
  win:
    runs-on: windows-2022
    name: ü™ü Windows MINGW64
    defaults:
      run:
        shell: msys2 {0}
    env:
      CCACHE_DIR:      "${{ github.workspace }}/.ccache"
      CCACHE_MAXSIZE:  "1000M"
      CCACHE_COMPRESS: "true"
    steps:
    - name: üß∞ Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: üìú Setup ccache
      uses:  hendrikmuhs/ccache-action@v1.2
      id:    cache-ccache
      with:
        key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-build-${{ github.run_id }}
        restore-keys: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-build
        max-size: 50M

    - name: üìú Restore CMakeCache
      uses:  actions/cache@v3
      with:
        path: |
          build/CMakeCache.txt
        key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-build-${{ hashFiles('**/CMakeLists.txt') }}

    - name: üü¶ Install msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        pacboy: >-
          gcc:p
          lld:p
          cmake:p
          make:p
          ccache:p
          glfw:p
          file:p
          mbedtls:p
          freetype:p
          dlfcn:p
          libbacktrace:p

    - name: üìú Set version variable
      run: |
        echo "IMHEX_VERSION=`cat VERSION`" >> $GITHUB_ENV

    # Windows cmake build
    - name: üõ†Ô∏è Build
      run: |
        mkdir -p build
        cd build

        cmake -G "MinGW Makefiles"                \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE          \
          -DCMAKE_INSTALL_PREFIX="$PWD/install"   \
          -DCREATE_PACKAGE=ON                     \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache      \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache    \
          -DCMAKE_C_FLAGS="-O3 -march=znver3 -fuse-ld=lld"          \
          -DCMAKE_CXX_FLAGS="-O3 -march=znver3 -fuse-ld=lld"        \
          -DIMHEX_PATTERNS_PULL_MASTER=ON         \
          ..
        mingw32-make -j4 install
        cpack
        mv imhex-*.msi ../imhex-${{env.IMHEX_VERSION}}-Windows-x86_64.msi

        echo "ImHex checks for the existence of this file to determine if it is running in portable mode. You should not delete this file" > $PWD/install/PORTABLE

    - name: ‚¨ÜÔ∏è Upload Windows Installer
      uses: actions/upload-artifact@v3
      with:
        name: Windows Installer x86_64
        path: |
          imhex-*.msi

    - name: ‚¨ÜÔ∏è Upload Portable ZIP
      uses: actions/upload-artifact@v3
      with:
        name: Windows Portable x86_64
        path: |
          build/install/*

    - name: ‚¨áÔ∏è Download Mesa3D for NoGPU version
      shell: bash
      run: |
        echo "NoGPU version Powered by Mesa 3D : https://fdossena.com/?p=mesa%2Findex.frag" > build/install/MESA.md
        curl https://werwolv.net/downloads/mesa/MesaForWindows-x64-latest.7z -L -o mesa.7z
        7z e mesa.7z
        mv opengl32.dll build/install

    - name: ‚¨ÜÔ∏è Upload NoGPU Portable ZIP
      uses: actions/upload-artifact@v3
      with:
        name: Windows Portable NoGPU x86_64
        path: |
          build/install/*
